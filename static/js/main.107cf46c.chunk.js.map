{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","SendButton","styled","Button","backgroundColor","isTyping","htmlFor","FileUpload","color","multiple","id","style","display","files","variant","size","endIcon","Send","MyMessage","message","attachments","src","file","alt","float","marginRight","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","LogOutButton","Logout","onClick","removeItem","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.107cf46c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = { 'Project-ID': \"ca60cbe4-aacc-4990-ab50-305aa1028e9d\", 'User-Name': username, 'User-Secret': password }\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n\r\n        } catch (error) {\r\n            setError('Incorrect credentials.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                        <h2 className=\"error\">{error}</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm","\r\nimport { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { FileUpload, Send } from \"@mui/icons-material\"\r\nimport { Button, styled } from \"@mui/material\"\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;    \r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text });        \r\n        \r\n        setValue('');\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n\r\n    const SendButton = styled(Button)({\r\n        backgroundColor: '#7554a0',\r\n        '&:hover': {\r\n            backgroundColor: '#3B2A50'\r\n    }});\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">                    \r\n                    <FileUpload className=\"picture-icon\" color=\"action\"/>                    \r\n                </span>    \r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <SendButton  type=\"submit\" variant=\"contained\" size=\"small\" endIcon={<Send />} className=\"send-button\" >\r\n                Send\r\n            </SendButton>\r\n        </form>      \r\n    );\r\n}\r\n\r\nexport default MessageForm\r\n","\r\nconst MyMessage = ({message}) => {\r\n    if(message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n            {message.text}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","\r\nconst TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    \r\n    return (        \r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {message?.attachments?.length > 0\r\n                ? (\r\n                    <img\r\n                        src={message.attachments[0].file}\r\n                        alt=\"message-attachment\"\r\n                        className=\"message-image\"\r\n                        style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                    />\r\n                ) : (\r\n                    <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                        {message.text}                        \r\n                    </div>\r\n                )\r\n            }            \r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nimport { Logout } from \"@mui/icons-material\"\r\nimport { Button, styled } from \"@mui/material\"\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];    \r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div\r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        \r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            \r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;                \r\n            \r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message}/>\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('username');\r\n\r\n        window.location.reload()\r\n    }\r\n\r\n    const LogOutButton = styled(Button)({\r\n        backgroundColor: '#7554a0',\r\n        '&:hover': {\r\n            backgroundColor: '#3B2A50'\r\n    }});\r\n\r\n    if(!chat) return 'Loading...';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <LogOutButton variant=\"contained\" size=\"small\" endIcon={<Logout />} className=\"log-out\" onClick={logOut} >\r\n                    Logout\r\n                </LogOutButton>\r\n                <div className=\"chat-title\">\r\n                    {chat.title}                    \r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFeed;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport LoginForm from './components/LoginForm';\r\nimport ChatFeed from './components/ChatFeed';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return (\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID=\"ca60cbe4-aacc-4990-ab50-305aa1028e9d\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}